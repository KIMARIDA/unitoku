name: TestFlight Deployment

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:
    inputs:
      version_bump:
        description: 'Version bump type'
        required: false
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

jobs:
  deploy:
    runs-on: macos-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.2'
        
    - name: Install Apple Certificate
      env:
        BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
        P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        # Create variables
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
        
        # Import certificate from secrets
        echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
        
        # Create temporary keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        
        # Import certificate to keychain
        security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH
        
    - name: Install Provisioning Profile
      env:
        PROVISIONING_CERTIFICATE_BASE64: ${{ secrets.PROVISIONING_CERTIFICATE_BASE64 }}
      run: |
        PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
        echo -n "$PROVISIONING_CERTIFICATE_BASE64" | base64 --decode -o $PP_PATH
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
        
    - name: Get Current Version
      id: version
      run: |
        CURRENT_VERSION=$(xcodebuild -project unitoku.xcodeproj -showBuildSettings -configuration Release | grep "MARKETING_VERSION" | head -1 | sed 's/.*= //')
        CURRENT_BUILD=$(xcodebuild -project unitoku.xcodeproj -showBuildSettings -configuration Release | grep "CURRENT_PROJECT_VERSION" | head -1 | sed 's/.*= //')
        echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        echo "current_build=$CURRENT_BUILD" >> $GITHUB_OUTPUT
        
    - name: Increment Build Number
      run: |
        xcrun agvtool next-version -all
        NEW_BUILD=$(xcodebuild -project unitoku.xcodeproj -showBuildSettings -configuration Release | grep "CURRENT_PROJECT_VERSION" | head -1 | sed 's/.*= //')
        echo "NEW_BUILD=$NEW_BUILD" >> $GITHUB_ENV
        
    - name: Build and Archive
      run: |
        TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
        ARCHIVE_PATH="./build/unitoku_ci_${TIMESTAMP}.xcarchive"
        
        mkdir -p ./build
        
        xcodebuild archive \
          -project unitoku.xcodeproj \
          -scheme unitoku \
          -configuration Release \
          -destination "generic/platform=iOS" \
          -archivePath "$ARCHIVE_PATH" \
          CODE_SIGN_STYLE=Automatic \
          DEVELOPMENT_TEAM="${{ secrets.TEAM_ID }}" \
          -allowProvisioningUpdates
          
        echo "ARCHIVE_PATH=$ARCHIVE_PATH" >> $GITHUB_ENV
        
    - name: Export IPA and Upload to TestFlight
      env:
        APPSTORE_CONNECT_API_KEY_ID: ${{ secrets.APPSTORE_CONNECT_API_KEY_ID }}
        APPSTORE_CONNECT_ISSUER_ID: ${{ secrets.APPSTORE_CONNECT_ISSUER_ID }}
        APPSTORE_CONNECT_API_KEY_BASE64: ${{ secrets.APPSTORE_CONNECT_API_KEY_BASE64 }}
      run: |
        # Setup API Key
        API_KEY_PATH=$RUNNER_TEMP/AuthKey_$APPSTORE_CONNECT_API_KEY_ID.p8
        echo -n "$APPSTORE_CONNECT_API_KEY_BASE64" | base64 --decode -o $API_KEY_PATH
        
        # Create ExportOptions.plist
        cat > ExportOptions.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>method</key>
            <string>app-store</string>
            <key>teamID</key>
            <string>${{ secrets.TEAM_ID }}</string>
            <key>uploadBitcode</key>
            <false/>
            <key>uploadSymbols</key>
            <true/>
            <key>compileBitcode</key>
            <false/>
            <key>destination</key>
            <string>upload</string>
            <key>signingStyle</key>
            <string>automatic</string>
        </dict>
        </plist>
        EOF
        
        # Export and Upload
        xcodebuild -exportArchive \
          -archivePath "$ARCHIVE_PATH" \
          -exportPath ./build/ \
          -exportOptionsPlist ExportOptions.plist \
          -authenticationKeyPath $API_KEY_PATH \
          -authenticationKeyID $APPSTORE_CONNECT_API_KEY_ID \
          -authenticationKeyIssuerID $APPSTORE_CONNECT_ISSUER_ID \
          -allowProvisioningUpdates
          
    - name: Commit Version Changes
      if: github.event_name == 'push'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "ðŸš€ Bump build to $NEW_BUILD for TestFlight [skip ci]" || exit 0
        git push
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ðŸš€ New TestFlight build deployed!
          
          **Version:** ${{ steps.version.outputs.current_version }}
          **Build:** ${{ env.NEW_BUILD }}
          
          The app has been uploaded to TestFlight and will be available for testing once Apple's processing is complete (usually 5-15 minutes).
        draft: false
        prerelease: false
